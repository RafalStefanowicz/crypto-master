{"version":3,"sources":["components/Loader/Loader.tsx","../node_modules/lodash/mapKeys.js","components/layouts/Ranking/RankingList/rankingListStyles.ts","styles/common.ts","components/layouts/Ranking/RankingList/RankingList.tsx","components/layouts/Ranking/RankingFilter/rankingFilterStyles.ts","components/layouts/Ranking/RankingFilter/RankingFilter.tsx","utility/getUsersAssetDetails.ts","components/layouts/Ranking/Ranking.tsx","utility/filterUsersAsset.ts","components/layouts/Ranking/RankingDataHandler.tsx","customHooks/useWallets.ts"],"names":["Loader","baseAssignValue","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","StyledRankItem","styled","li","StyledRankList","ul","device","mobileL","StyledAssetWrapper","span","color","StyledUserNameWrapper","StyledLinkWrapper","StyledLabel","StyledNavLink","NavLink","theme","green","RankingList","filteredUsersAssetRank","map","rank","userName","asset","INITIAL_WALLET_USD","ColorType","red","getColorAsset","to","ROUTES","INVESTMENTS","icon","faHandPointer","StyledFilterInput","input","RankingFilter","filterValue","handleFilterChange","onChange","placeholder","Ranking","wallets","cryptos","useState","setFilterValue","usersAssetDetails","filter","userAsset","toLowerCase","includes","filterUsersAsset","users","_mapValues","wallet","prop","PRICE","getCurrencyFormat","Object","keys","sort","a","b","index","getUsersAssetDetails","event","currentTarget","compose","connect","state","isLoggedIn","withFirebase","firebase","setWallets","useEffect","usersDb","on","snapshot","val","userNames","_mapKeys","personal","off","useWallets","length"],"mappings":"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","file":"static/js/6.4ff209c5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n  return <div>Loading</div>;\r\n};\r\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\n\n\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n  baseForOwn(object, function (value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;","import styled from \"styled-components\";\r\n\r\nimport { ColorType } from \"../../../../styles/theme\";\r\nimport { device } from \"../../../../styles/media\";\r\n\r\nexport const StyledRankItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 8px 0;\r\n  align-items: center;\r\n`;\r\nexport const StyledRankList = styled.ul`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  font-size: 24px;\r\n\r\n  @media ${device.mobileL} {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\ninterface StyledAssetWrapperProps {\r\n  color?: ColorType;\r\n}\r\n\r\nexport const StyledAssetWrapper = styled.span<StyledAssetWrapperProps>`\r\n  flex: 2;\r\n  color: ${({ color }) => color};\r\n`;\r\n\r\nexport const StyledUserNameWrapper = styled.span`\r\n  flex: 3;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledLinkWrapper = styled.span`\r\n  flex: 1;\r\n  text-align: center;\r\n  @media ${device.mobileL} {\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nexport const StyledLabel = styled.span`\r\n  margin-right: 2px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { ThemeI } from \"./theme\";\r\n\r\ninterface StyledNavLinkProps {\r\n  theme: ThemeI;\r\n}\r\nexport const StyledNavLink = styled(NavLink)<StyledNavLinkProps>`\r\n  :hover {\r\n    color: ${({ theme: { color } }) => color.green};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHandPointer } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { ROUTES } from \"../../../../types/ROUTES\";\r\nimport { getUsersAssetDetails } from \"../../../../utility/getUsersAssetDetails\";\r\nimport {\r\n  StyledRankList,\r\n  StyledRankItem,\r\n  StyledUserNameWrapper,\r\n  StyledAssetWrapper,\r\n  StyledLinkWrapper,\r\n  StyledLabel\r\n} from \"./rankingListStyles\";\r\nimport { StyledNavLink } from \"../../../../styles/common\";\r\nimport { INITIAL_WALLET_USD } from \"../../../../constants/INITIAL_WALLET_USD\";\r\nimport { ColorType } from \"../../../../styles/theme\";\r\n\r\ninterface RankingListProps {\r\n  filteredUsersAssetRank: ReturnType<typeof getUsersAssetDetails>;\r\n}\r\n\r\nexport const RankingList = ({ filteredUsersAssetRank }: RankingListProps) => {\r\n  const renderRankItems = () =>\r\n    filteredUsersAssetRank.map(({ rank, userName, asset }) => {\r\n      const getColorAsset = (asset: number) => {\r\n        if (asset > INITIAL_WALLET_USD) return ColorType.green;\r\n        else if (asset < INITIAL_WALLET_USD) return ColorType.red;\r\n      };\r\n\r\n      return (\r\n        <StyledRankItem key={userName}>\r\n          <StyledUserNameWrapper>\r\n            <StyledLabel>{rank}.</StyledLabel>\r\n            <StyledLabel>{userName}</StyledLabel>\r\n          </StyledUserNameWrapper>\r\n          <StyledAssetWrapper color={getColorAsset(asset)}>\r\n            {asset} $\r\n          </StyledAssetWrapper>\r\n          <StyledLinkWrapper>\r\n            <StyledNavLink to={`${ROUTES.INVESTMENTS}/${userName}`}>\r\n              <FontAwesomeIcon icon={faHandPointer} />\r\n            </StyledNavLink>\r\n          </StyledLinkWrapper>\r\n        </StyledRankItem>\r\n      );\r\n    });\r\n  return <StyledRankList>{renderRankItems()}</StyledRankList>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { device } from \"../../../../styles/media\";\r\n\r\nexport const StyledFilterInput = styled.input`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 4px;\r\n  font-size: 24px;\r\n\r\n  @media ${device.mobileL} {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledFilterInput } from \"./rankingFilterStyles\";\r\n\r\ninterface RankingFilterProps {\r\n  filterValue: string;\r\n  handleFilterChange: (event: React.FormEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const RankingFilter = ({\r\n  filterValue,\r\n  handleFilterChange\r\n}: RankingFilterProps) => {\r\n  return (\r\n    <StyledFilterInput\r\n      value={filterValue}\r\n      onChange={handleFilterChange}\r\n      placeholder=\"find..\"\r\n    />\r\n  );\r\n};\r\n","import _mapValues from \"lodash/mapValues\";\r\nimport { WalletsI } from \"../customHooks/useWallets\";\r\nimport { CryptosI } from \"../redux/reducers/cryptos\";\r\nimport { WalletI } from \"../redux/reducers/wallet\";\r\nimport { getCurrencyFormat } from \"./numberFormats\";\r\n\r\nexport const getUsersAssetDetails = (wallets: WalletsI, cryptos: CryptosI) => {\r\n  if (cryptos === null) return [];\r\n\r\n  // create an object of userNames keys with asset and userNames property\r\n  const users = _mapValues(wallets, (wallet: WalletI, userName: string) => {\r\n    let asset = 0;\r\n\r\n    for (let prop in wallet) {\r\n      if (prop === \"USD\") {\r\n        asset = asset + wallet[prop];\r\n      } else {\r\n        asset += wallet[prop] * cryptos[prop].PRICE;\r\n      }\r\n    }\r\n\r\n    asset = getCurrencyFormat(asset);\r\n    return { asset, userName };\r\n  });\r\n  const userNames = Object.keys(users);\r\n\r\n  // create sorted array by rank of users\r\n  const usersAssetDetails = userNames\r\n    .map(userName => {\r\n      return { ...users[userName] };\r\n    })\r\n    .sort((a, b) => {\r\n      return b.asset - a.asset;\r\n    })\r\n    .map((userName, index) => {\r\n      return { ...userName, rank: index + 1 };\r\n    });\r\n\r\n  return usersAssetDetails;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { RankingList } from \"./RankingList/RankingList\";\r\nimport { RankingFilter } from \"./RankingFilter/RankingFilter\";\r\nimport { WalletsI } from \"../../../customHooks/useWallets\";\r\nimport { CryptosI } from \"../../../redux/reducers/cryptos\";\r\nimport { getUsersAssetDetails } from \"../../../utility//getUsersAssetDetails\";\r\nimport { filterUsersAsset } from \"../../../utility/filterUsersAsset\";\r\n\r\ninterface RankingProps {\r\n  wallets: WalletsI;\r\n  cryptos: CryptosI;\r\n}\r\n\r\nexport const Ranking = ({ wallets, cryptos }: RankingProps) => {\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n\r\n  const handleFilterChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setFilterValue(event.currentTarget.value);\r\n  };\r\n\r\n  const usersAssetDetails = getUsersAssetDetails(wallets, cryptos);\r\n\r\n  const filteredUsersAssetRank = filterUsersAsset(\r\n    usersAssetDetails,\r\n    filterValue\r\n  );\r\n  return (\r\n    <>\r\n      <RankingFilter\r\n        filterValue={filterValue}\r\n        handleFilterChange={handleFilterChange}\r\n      />\r\n      <RankingList filteredUsersAssetRank={filteredUsersAssetRank} />\r\n    </>\r\n  );\r\n};\r\n","import { getUsersAssetDetails } from \"./getUsersAssetDetails\";\r\n\r\nexport const filterUsersAsset = (\r\n  usersAssetDetails: ReturnType<typeof getUsersAssetDetails>,\r\n  filterValue: string\r\n): ReturnType<typeof getUsersAssetDetails> =>\r\n  usersAssetDetails.filter(userAsset => {\r\n    const userName = userAsset.userName.toLowerCase();\r\n    const filter = filterValue.toLowerCase();\r\n\r\n    return userName.includes(filter);\r\n  });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { Ranking } from \"./Ranking\";\r\nimport { Loader } from \"../../Loader/Loader\";\r\nimport { Firebase } from \"../../../firebase/Firebase\";\r\nimport { withFirebase } from \"../../../firebase/withFirebase\";\r\nimport { IStore } from \"../../../redux/reducers\";\r\nimport { CryptosI } from \"../../../redux/reducers/cryptos\";\r\nimport { IsLoggedInType } from \"../../../redux/reducers/isLoggedIn\";\r\nimport { useWallets } from \"../../../customHooks/useWallets\";\r\n\r\ninterface RankingDataHandlerProps {\r\n  firebase: Firebase;\r\n  cryptos: CryptosI;\r\n  isLoggedIn: IsLoggedInType;\r\n}\r\nconst _RankingDataHandler = ({\r\n  firebase,\r\n  cryptos,\r\n  isLoggedIn\r\n}: RankingDataHandlerProps) => {\r\n  const wallets = useWallets(firebase);\r\n\r\n  if (!isLoggedIn || !cryptos || !Object.keys(wallets).length)\r\n    return <Loader />;\r\n\r\n  return <Ranking wallets={wallets} cryptos={cryptos} />;\r\n};\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  isLoggedIn: state.isLoggedIn,\r\n  cryptos: state.cryptos\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  withFirebase\r\n)(_RankingDataHandler) as React.FC;\r\n","import { useState, useEffect } from \"react\";\r\nimport _mapKeys from \"lodash/mapKeys\";\r\nimport _mapValues from \"lodash/mapValues\";\r\nimport { WalletI } from \"../redux/reducers/wallet\";\r\n\r\nimport { Firebase } from \"../firebase/Firebase\";\r\n\r\nexport interface WalletsI {\r\n  [userName: string]: WalletI;\r\n}\r\n\r\nexport const useWallets = (firebase: Firebase) => {\r\n  const [wallets, setWallets] = useState<WalletsI>({});\r\n\r\n  useEffect(() => {\r\n    firebase.usersDb().on(\"value\", snapshot => {\r\n      const users = snapshot.val();\r\n\r\n      // change key for userNames\r\n      const userNames = _mapKeys(users, value => value.personal.userName);\r\n\r\n      // keep only wallet property in object\r\n      const wallets = _mapValues(userNames, \"wallet\");\r\n      setWallets(wallets);\r\n    });\r\n\r\n    return () => {\r\n      firebase.usersDb().off();\r\n    };\r\n  }, [firebase]);\r\n\r\n  return wallets;\r\n};\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/Loader/Loader.tsx","styles/buttons.ts","assets/images/facebook.png","assets/images/google.png","styles/formStyles.ts","components/Form/SubmitButton/SubmitButton.tsx","components/Form/ChangePasswordForm.tsx/ChangePasswordForm.tsx","components/LogOutBtn/LogOutBtn.tsx","components/layouts/Account/accountStyles.ts","components/layouts/Account/Account.tsx","components/layouts/Account/Provider/providerStyles.ts","components/layouts/Account/Provider/Provider.tsx","components/layouts/Account/ChangePasswordButton/ChangePasswordButton.tsx","components/layouts/Account/AccountLogic.tsx","customHooks/usePersonalDb.ts"],"names":["Loader","StyledButtonAccess","styled","button","theme","color","green","small","css","RectangleButton","module","exports","StyledForm","Form","StyledField","Field","StyledMessage","ErrorMessage","red","StyledSubmitButton","StyledButtonInner","span","StyledLoadingIconWrapper","submitting","SubmitButton","disabled","text","type","icon","faSpinner","className","FORM_INITIAL_VALUES","currentPassword","newPassword","ChangePasswordForm","compose","withFirebase","connect","showModal","firebase","toggleIsFormShown","initialValues","validate","changePasswordValidate","onSubmit","a","setSubmitting","doChangePassword","modalType","MODAL_TYPES","ALERT","modalProps","alertText","isSubmitting","isValid","name","placeholder","component","LogOutBtn","onClick","auth","signOut","StyledUserName","h1","navyBlue","device","mobileL","StyledEmail","p","StyledProviderWrapper","div","Account","userName","email","renderProviderOrChangePass","ProviderLabel","ProviderImage","img","ProviderWrapper","Provider","isGoogleProvider","provider","src","googleImg","facebookImg","alt","ChangePasswordButton","handleClick","personalDb","useState","setPersonalDb","userId","getUserId","useEffect","once","snapShot","val","usePersonalDb","isFormShown","setIsFormShown","createdBy"],"mappings":"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","file":"static/js/5.1940be33.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Loader = () => {\r\n  return <div>Loading</div>;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { ThemeI } from \"./theme\";\r\n\r\ninterface StyledButtonProps {\r\n  small?: boolean;\r\n}\r\nexport const StyledButtonAccess = styled.button<StyledButtonProps>`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 8px 30px;\r\n  border-radius: 50px;\r\n  border-color: black;\r\n  font-size: 24px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 3px;\r\n\r\n  :hover {\r\n    background-color: ${({ theme: { color } }) => color.green};\r\n    color: white;\r\n  }\r\n\r\n  ${({ small }) =>\r\n    small &&\r\n    css`\r\n      padding: 6px 20px;\r\n      font-size: 20px;\r\n      letter-spacing: 1px;\r\n    `}\r\n`;\r\ninterface RectangleButtonProps {\r\n  theme: ThemeI;\r\n}\r\nexport const RectangleButton = styled.button<RectangleButtonProps>`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 4px 20px;\r\n  border-color: black;\r\n  font-size: 18px;\r\n\r\n  :hover {\r\n    background-color: ${({ theme: { color } }) => color.green};\r\n    color: white;\r\n  }\r\n`;\r\n","module.exports = __webpack_public_path__ + \"static/media/facebook.c6c0c9ce.png\";","module.exports = __webpack_public_path__ + \"static/media/google.afb13f7b.png\";","import { Form, Field, ErrorMessage } from \"formik\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { ThemeI } from \"./theme\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const StyledField = styled(Field)`\r\n  margin: 1px;\r\n  padding: 4px;\r\n  border: 1px solid black;\r\n  font-size: 16px;\r\n`;\r\n\r\ninterface StyledMessageProps {\r\n  theme: ThemeI;\r\n}\r\nexport const StyledMessage = styled(ErrorMessage)<StyledMessageProps>`\r\n  font-size: 16px;\r\n  color: ${({ theme: { color } }) => color.red};\r\n`;\r\n\r\nexport const StyledSubmitButton = styled.button`\r\n  display: block;\r\n  margin: 4px auto;\r\n  padding: 4px 22px;\r\n  font-size: 18px;\r\n  border: 1px solid black;\r\n\r\n  :hover {\r\n    background-color: ${({ theme: { color } }) => color.green};\r\n    color: white;\r\n  }\r\n\r\n  :disabled {\r\n    border-color: gray;\r\n    color: gray;\r\n    cursor: default;\r\n\r\n    :hover {\r\n      background-color: white;\r\n      color: gray;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledButtonInner = styled.span`\r\n  position: relative;\r\n`;\r\n\r\ninterface StyledLoadingIconWrapperProps {\r\n  submitting: boolean;\r\n}\r\n\r\nexport const StyledLoadingIconWrapper = styled.span<\r\n  StyledLoadingIconWrapperProps\r\n>`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: -20px;\r\n  display: ${({ submitting }) => (submitting ? \"inline\" : \"none\")};\r\n`;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {\r\n  StyledSubmitButton,\r\n  StyledButtonInner,\r\n  StyledLoadingIconWrapper\r\n} from \"../../../styles/formStyles\";\r\n\r\ninterface SubmitButtonProps {\r\n  disabled: boolean;\r\n  text: string;\r\n  submitting: boolean;\r\n}\r\n\r\nexport const SubmitButton = ({\r\n  disabled,\r\n  text,\r\n  submitting\r\n}: SubmitButtonProps) => {\r\n  return (\r\n    <StyledSubmitButton type=\"submit\" disabled={disabled}>\r\n      <StyledButtonInner>\r\n        <StyledLoadingIconWrapper submitting={submitting}>\r\n          <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\r\n        </StyledLoadingIconWrapper>\r\n        {text}\r\n      </StyledButtonInner>\r\n    </StyledSubmitButton>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { changePasswordValidate } from \"../../../utility/validate\";\r\nimport { MODAL_TYPES } from \"../../../types/MODAL_TYPES\";\r\nimport { withFirebase } from \"../../../firebase/withFirebase\";\r\nimport { Firebase } from \"../../../firebase/Firebase\";\r\nimport { showModal } from \"../../../redux/actions/modalActions\";\r\nimport {\r\n  StyledForm,\r\n  StyledField,\r\n  StyledMessage\r\n} from \"../../../styles/formStyles\";\r\nimport { SubmitButton } from \"../SubmitButton/SubmitButton\";\r\n\r\nconst FORM_INITIAL_VALUES = {\r\n  currentPassword: \"\",\r\n  newPassword: \"\"\r\n};\r\n\r\ninterface ChangePasswordFormProps {\r\n  firebase: Firebase;\r\n  showModal: typeof showModal;\r\n  toggleIsFormShown: () => void;\r\n}\r\n\r\nconst _ChangePasswordForm = ({\r\n  firebase,\r\n  showModal,\r\n  toggleIsFormShown\r\n}: ChangePasswordFormProps) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ ...FORM_INITIAL_VALUES }}\r\n      validate={changePasswordValidate}\r\n      onSubmit={async ({ currentPassword, newPassword }, { setSubmitting }) => {\r\n        try {\r\n          await firebase.doChangePassword(currentPassword, newPassword);\r\n          setSubmitting(false);\r\n          toggleIsFormShown();\r\n        } catch (error) {\r\n          setSubmitting(false);\r\n          showModal({\r\n            modalType: MODAL_TYPES.ALERT,\r\n            modalProps: { alertText: \"Please provide actual password\" }\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid }) => {\r\n        return (\r\n          <StyledForm>\r\n            <StyledField\r\n              type=\"password\"\r\n              name=\"currentPassword\"\r\n              placeholder=\"current password\"\r\n            />\r\n            <StyledMessage name=\"currentPassword\" component=\"div\" />\r\n            <StyledField\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              placeholder=\"new password\"\r\n            />\r\n            <StyledMessage name=\"newPassword\" component=\"div\" />\r\n            <SubmitButton\r\n              disabled={!isValid || isSubmitting}\r\n              submitting={isSubmitting}\r\n              text=\"Change\"\r\n            ></SubmitButton>\r\n          </StyledForm>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport const ChangePasswordForm = compose(\r\n  withFirebase,\r\n  connect(\r\n    null,\r\n    { showModal }\r\n  )\r\n)(_ChangePasswordForm) as React.ReactType;\r\n","import React from \"react\";\r\n\r\nimport { StyledButtonAccess } from \"../../styles/buttons\";\r\nimport { withFirebase } from \"../../firebase/withFirebase\";\r\nimport { Firebase } from \"../../firebase/Firebase\";\r\n\r\ninterface LogOutBtnProps {\r\n  firebase: Firebase;\r\n}\r\n\r\nconst _LogOutBtn = ({ firebase }: LogOutBtnProps) => {\r\n  const handleLogOut = () => {\r\n    firebase.auth.signOut();\r\n  };\r\n\r\n  return (\r\n    <StyledButtonAccess onClick={handleLogOut} small>\r\n      Log out\r\n    </StyledButtonAccess>\r\n  );\r\n};\r\n\r\nexport const LogOutBtn = withFirebase(_LogOutBtn);\r\n","import styled from \"styled-components\";\r\nimport { ThemeI } from \"../../../styles/theme\";\r\nimport { device } from \"../../../styles/media\";\r\n\r\ninterface StyledUserNameProps {\r\n  theme: ThemeI;\r\n}\r\n\r\nexport const StyledUserName = styled.h1<StyledUserNameProps>`\r\n  margin: 30px 0 6px;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  color: ${({ theme: { color } }) => color.navyBlue};\r\n\r\n  @media ${device.mobileL} {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const StyledEmail = styled.p`\r\n  margin: 6px;\r\n  text-align: center;\r\n  font-size: 26px;\r\n\r\n  @media ${device.mobileL} {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledProviderWrapper = styled.div`\r\n  height: 160px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { LogOutBtn } from \"../../LogOutBtn/LogOutBtn\";\r\nimport {\r\n  StyledUserName,\r\n  StyledEmail,\r\n  StyledProviderWrapper\r\n} from \"./accountStyles\";\r\n\r\ninterface AccountProps {\r\n  userName: string;\r\n  email: string;\r\n  renderProviderOrChangePass: () => JSX.Element;\r\n}\r\n\r\nexport const Account = ({\r\n  userName,\r\n  email,\r\n  renderProviderOrChangePass\r\n}: AccountProps) => {\r\n  return (\r\n    <>\r\n      <StyledUserName>{userName}</StyledUserName>\r\n      <StyledEmail>{email}</StyledEmail>\r\n      <StyledProviderWrapper>\r\n        {renderProviderOrChangePass()}\r\n      </StyledProviderWrapper>\r\n      <LogOutBtn />\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ProviderLabel = styled.p`\r\n  font-size: 22px;\r\n`;\r\n\r\nexport const ProviderImage = styled.img`\r\n  margin: 4px;\r\n  max-height: 50px;\r\n`;\r\n\r\nexport const ProviderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 15px;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  ProviderWrapper,\r\n  ProviderLabel,\r\n  ProviderImage\r\n} from \"./providerStyles\";\r\nimport facebookImg from \"../../../../assets/images/facebook.png\";\r\nimport googleImg from \"../../../../assets/images/google.png\";\r\n\r\ninterface ProviderProps {\r\n  provider: string;\r\n}\r\n\r\nexport const Provider = ({ provider }: ProviderProps) => {\r\n  const isGoogleProvider = provider === \"google.com\";\r\n\r\n  return (\r\n    <ProviderWrapper>\r\n      <ProviderLabel>logged by</ProviderLabel>\r\n      <ProviderImage\r\n        src={isGoogleProvider ? googleImg : facebookImg}\r\n        alt={isGoogleProvider ? \"google.com\" : \"facebook.com\"}\r\n      />\r\n    </ProviderWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { RectangleButton } from \"../../../../styles/buttons\";\r\n\r\ninterface ChangePasswordButtonProps {\r\n  handleClick: () => void;\r\n}\r\nexport const ChangePasswordButton = ({\r\n  handleClick\r\n}: ChangePasswordButtonProps) => {\r\n  return (\r\n    <RectangleButton\r\n      onClick={() => {\r\n        handleClick();\r\n      }}\r\n    >\r\n      Change password\r\n    </RectangleButton>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ChangePasswordForm } from \"../../Form/ChangePasswordForm.tsx/ChangePasswordForm\";\r\nimport { Loader } from \"../../Loader/Loader\";\r\nimport { withFirebase } from \"../../../firebase/withFirebase\";\r\nimport { Firebase } from \"../../../firebase/Firebase\";\r\nimport { usePersonalDb } from \"../../../customHooks/usePersonalDb\";\r\nimport { Account } from \"./Account\";\r\nimport { Provider } from \"./Provider/Provider\";\r\nimport { ChangePasswordButton } from \"./ChangePasswordButton/ChangePasswordButton\";\r\n\r\ninterface AccountLogicProps {\r\n  firebase: Firebase;\r\n}\r\n\r\nconst _AccountLogic = ({ firebase }: AccountLogicProps) => {\r\n  const personalDb = usePersonalDb(firebase);\r\n  const [isFormShown, setIsFormShown] = useState(false);\r\n\r\n  if (!(\"userName\" in personalDb)) return <Loader />;\r\n\r\n  const { userName, email, createdBy } = personalDb;\r\n\r\n  const toggleIsFormShown = () => {\r\n    setIsFormShown(!isFormShown);\r\n  };\r\n\r\n  const renderProviderOrChangePass = (): JSX.Element => {\r\n    if (createdBy !== \"firebase.com\") {\r\n      return <Provider provider={createdBy} />;\r\n    } else if (isFormShown) {\r\n      return <ChangePasswordForm toggleIsFormShown={toggleIsFormShown} />;\r\n    } else {\r\n      return <ChangePasswordButton handleClick={toggleIsFormShown} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Account\r\n        userName={userName}\r\n        email={email}\r\n        renderProviderOrChangePass={renderProviderOrChangePass}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withFirebase(_AccountLogic);\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { Firebase } from \"../firebase/Firebase\";\r\nimport { PersonalI } from \"../types/PersonalI\";\r\n\r\nexport const usePersonalDb = (firebase: Firebase) => {\r\n  const [personalDb, setPersonalDb] = useState<PersonalI | {}>({});\r\n\r\n  const userId = firebase.getUserId();\r\n  useEffect(() => {\r\n    if (userId) {\r\n      firebase.personalDb(userId).once(\"value\", snapShot => {\r\n        setPersonalDb(snapShot.val());\r\n      });\r\n    }\r\n    return () => {};\r\n  }, [firebase, userId]);\r\n\r\n  return personalDb;\r\n};\r\n"],"sourceRoot":""}
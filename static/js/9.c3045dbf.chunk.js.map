{"version":3,"sources":["styles/buttons.ts","components/ForwardButton/ForwardButton.tsx","components/ForwardButton/ForwardButtonLogic.tsx","components/layouts/Home/GameGoals/gameGoalsStyle.ts","components/layouts/Home/GameGoals/CryptoIconsList/cryptoIconsListStyle.ts","components/layouts/Home/GameGoals/CryptoIconsList/CryptoIconsList.tsx","utility/divideObjectValues.ts","components/layouts/Home/GameGoals/GameGoals.tsx","components/layouts/Home/Home.tsx"],"names":["StyledButtonAccess","styled","button","theme","color","green","small","css","RectangleButton","ForwardButton","text","handleClick","onClick","ForwardButtonLogic","compose","connect","state","isLoggedIn","showModal","withRouter","history","buttonText","push","ROUTES","STOCK","modalType","MODAL_TYPES","JOIN","modalProps","StyledGoalsList","ul","StyledGoalItem","li","StyledIconsList","StyledIconItem","CryptoIconsList","iconsList","map","icon","crypto","Object","keys","key","src","alt","divideObjectValues","object","pieces","elementsInPiece","Math","floor","length","arrayOfPieces","i","piece","splice","forEach","GameGoals","dividedIcons","cryptoIcons","Home"],"mappings":"k6BAMO,IAAMA,EAAqBC,IAAOC,OAAV,KAWP,qBAAGC,MAASC,MAAoBC,SAIpD,qBAAGC,OAEHC,YADK,QAUIC,EAAkBP,IAAOC,OAAV,KAQJ,qBAAGC,MAASC,MAAoBC,U,4FC3B3CI,EAJU,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAC9B,OAAO,kBAAC,IAAD,CAAoBC,QAASD,GAAcD,I,wBC+BvCG,EAAqBC,kBAChCC,aALsB,SAACC,GAAD,MAAoD,CAC1EC,WAAYD,EAAMC,cAMhB,CAAEC,gBAEJC,IALgCL,EAtBN,SAAC,GAIG,IAH9BG,EAG6B,EAH7BA,WACAC,EAE6B,EAF7BA,UACAE,EAC6B,EAD7BA,QAQMC,EAAaJ,EAAa,OAAS,OAEzC,OAAsB,OAAfA,EACL,kBAACR,EAAD,CAAeE,YATG,WAClBM,EACIG,EAAQE,KAAKC,IAAOC,OACpBN,EAAU,CAAEO,UAAWC,IAAYC,KAAMC,WAAY,MAMhBlB,KAAMW,IAC7C,Q,sNChCC,IAAMQ,EAAkB5B,IAAO6B,GAAV,KAEfC,EAAiB9B,IAAO+B,GAAV,K,sNCFpB,IAAMC,EAAkBhC,IAAO6B,GAAV,KAKfI,EAAiBjC,IAAO+B,GAAV,KCEZ,SAASG,EAAT,GAA+D,IAApCC,EAAmC,EAAnCA,UAWxC,OAAO,kBAACH,EAAD,KATLG,EAAUC,KAAI,SAAAC,GACZ,IAAMC,EAASC,OAAOC,KAAKH,GAAM,GACjC,OACE,kBAACJ,EAAD,CAAgBQ,IAAKH,GACnB,yBAAKI,IAAKL,EAAKC,GAASK,IAAKL,S,YCb1BM,EAAqB,SAACC,EAAaC,GAK9C,IAJA,IAAMN,EAAOD,OAAOC,KAAKK,GACnBE,EAAkBC,KAAKC,MAAMT,EAAKU,OAASJ,GAC3CK,EAAiC,GAH0B,WAKxDC,GACP,IAAIC,EAAuB,GACTb,EAAKc,OAAO,EAAGP,GAEvBQ,SAAQ,SAAAd,GAChBY,EAAMhC,KAAN,eAAcoB,EAAMI,EAAOJ,QAE7BU,EAAc9B,KAAKgC,IAPZD,EAAI,EAAGA,EAAIN,EAAQM,IAAM,IASlC,OAAOD,GCTM,SAASK,IACtB,IAAMC,EAAeb,EAAmBc,IAAa,GACrD,OACE,kBAAC9B,EAAD,KACE,kBAACE,EAAD,KACE,kBAACI,EAAD,CAAiBC,UAAWsB,EAAa,KAD3C,kEAIA,kBAAC3B,EAAD,KACE,kBAACI,EAAD,CAAiBC,UAAWsB,EAAa,KAD3C,qDAIA,kBAAC3B,EAAD,KACE,kBAACI,EAAD,CAAiBC,UAAWsB,EAAa,KAD3C,2CAIA,kBAAC3B,EAAD,KACE,kBAACI,EAAD,CAAiBC,UAAWsB,EAAa,KAD3C,gDCTSE,UATF,WACX,OACE,oCACE,kBAACH,EAAD,MACA,kBAAC5C,EAAD","file":"static/js/9.c3045dbf.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { ThemeI } from \"./theme\";\r\n\r\ninterface StyledButtonProps {\r\n  small?: boolean;\r\n}\r\nexport const StyledButtonAccess = styled.button<StyledButtonProps>`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 8px 30px;\r\n  border-radius: 50px;\r\n  border-color: black;\r\n  font-size: 24px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 3px;\r\n\r\n  :hover {\r\n    background-color: ${({ theme: { color } }) => color.green};\r\n    color: white;\r\n  }\r\n\r\n  ${({ small }) =>\r\n    small &&\r\n    css`\r\n      padding: 6px 20px;\r\n      font-size: 20px;\r\n      letter-spacing: 1px;\r\n    `}\r\n`;\r\ninterface RectangleButtonProps {\r\n  theme: ThemeI;\r\n}\r\nexport const RectangleButton = styled.button<RectangleButtonProps>`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 4px 20px;\r\n  border-color: black;\r\n  font-size: 18px;\r\n\r\n  :hover {\r\n    background-color: ${({ theme: { color } }) => color.green};\r\n    color: white;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { StyledButtonAccess } from \"../../styles/buttons\";\r\n\r\ninterface ForwardButtonProps {\r\n  text: string;\r\n  handleClick: () => void;\r\n}\r\n\r\nconst _ForwardButton = ({ text, handleClick }: ForwardButtonProps) => {\r\n  return <StyledButtonAccess onClick={handleClick}>{text}</StyledButtonAccess>;\r\n};\r\n\r\nexport const ForwardButton = _ForwardButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { History } from \"history\";\r\n\r\nimport { ForwardButton } from \"./ForwardButton\";\r\nimport { ROUTES } from \"../../types/ROUTES\";\r\nimport { MODAL_TYPES } from \"../../types/MODAL_TYPES\";\r\nimport { showModal } from \"../../redux/actions/modalActions\";\r\nimport { IStore } from \"../../redux/reducers\";\r\nimport { IsLoggedInType } from \"../../redux/reducers/isLoggedIn\";\r\n\r\ninterface ForwardButtonLogicProps {\r\n  isLoggedIn: IsLoggedInType;\r\n  showModal: typeof showModal;\r\n  history: History;\r\n}\r\n\r\nconst _ForwardButtonLogic = ({\r\n  isLoggedIn,\r\n  showModal,\r\n  history\r\n}: ForwardButtonLogicProps) => {\r\n  const handleClick = () => {\r\n    isLoggedIn\r\n      ? history.push(ROUTES.STOCK)\r\n      : showModal({ modalType: MODAL_TYPES.JOIN, modalProps: {} });\r\n  };\r\n\r\n  const buttonText = isLoggedIn ? \"Play\" : \"Join\";\r\n\r\n  return isLoggedIn !== null ? (\r\n    <ForwardButton handleClick={handleClick} text={buttonText}></ForwardButton>\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state: IStore): { isLoggedIn: IsLoggedInType } => ({\r\n  isLoggedIn: state.isLoggedIn\r\n});\r\n\r\nexport const ForwardButtonLogic = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { showModal }\r\n  ),\r\n  withRouter\r\n)(_ForwardButtonLogic) as React.ReactType;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledGoalsList = styled.ul``;\r\n\r\nexport const StyledGoalItem = styled.li`\r\n  margin: 20px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledIconsList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledIconItem = styled.li`\r\n  margin: 0 5px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { StyledIconsList, StyledIconItem } from \"./cryptoIconsListStyle\";\r\nimport { CryptoIconI } from \"../../../../../constants/cryptoIcons\";\r\n\r\ninterface CryptoIconsListProps {\r\n  iconsList: CryptoIconI[];\r\n}\r\n\r\nexport default function CryptoIconsList({ iconsList }: CryptoIconsListProps) {\r\n  const renderIcons = () =>\r\n    iconsList.map(icon => {\r\n      const crypto = Object.keys(icon)[0];\r\n      return (\r\n        <StyledIconItem key={crypto}>\r\n          <img src={icon[crypto]} alt={crypto}></img>\r\n        </StyledIconItem>\r\n      );\r\n    });\r\n\r\n  return <StyledIconsList>{renderIcons()}</StyledIconsList>;\r\n}\r\n","import { CryptoIconI } from \"../constants/cryptoIcons\";\r\n\r\nexport const divideObjectValues = (object: any, pieces: number) => {\r\n  const keys = Object.keys(object);\r\n  const elementsInPiece = Math.floor(keys.length / pieces);\r\n  const arrayOfPieces: CryptoIconI[][] = [];\r\n\r\n  for (let i = 0; i < pieces; i++) {\r\n    let piece: CryptoIconI[] = [];\r\n    const pieceKeys = keys.splice(0, elementsInPiece);\r\n\r\n    pieceKeys.forEach(key => {\r\n      piece.push({ [key]: object[key] });\r\n    });\r\n    arrayOfPieces.push(piece);\r\n  }\r\n  return arrayOfPieces;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { StyledGoalsList, StyledGoalItem } from \"./gameGoalsStyle\";\r\nimport { cryptoIcons } from \"../../../../constants/cryptoIcons\";\r\nimport CryptoIconsList from \"./CryptoIconsList/CryptoIconsList\";\r\nimport { divideObjectValues } from \"../../../../utility/divideObjectValues\";\r\n\r\nexport default function GameGoals() {\r\n  const dividedIcons = divideObjectValues(cryptoIcons, 4);\r\n  return (\r\n    <StyledGoalsList>\r\n      <StyledGoalItem>\r\n        <CryptoIconsList iconsList={dividedIcons[0]} />\r\n        Improve your trading skills on a virtual cryptocurrency market\r\n      </StyledGoalItem>\r\n      <StyledGoalItem>\r\n        <CryptoIconsList iconsList={dividedIcons[1]} />\r\n        Trade twenty of the most popular cryptocurrencies\r\n      </StyledGoalItem>\r\n      <StyledGoalItem>\r\n        <CryptoIconsList iconsList={dividedIcons[2]} />\r\n        Compete in the ranking with other users\r\n      </StyledGoalItem>\r\n      <StyledGoalItem>\r\n        <CryptoIconsList iconsList={dividedIcons[3]} />\r\n        Compare your strategy to the most-won users\r\n      </StyledGoalItem>\r\n    </StyledGoalsList>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { ForwardButtonLogic } from \"../../ForwardButton/ForwardButtonLogic\";\r\nimport GameGoals from \"./GameGoals/GameGoals\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <GameGoals />\r\n      <ForwardButtonLogic />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}